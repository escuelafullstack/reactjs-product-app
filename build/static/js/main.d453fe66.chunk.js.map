{"version":3,"sources":["Context/UserContext.js","Componentes/NavBar.js","Contenedores/Inicio.js","firebase.js","Componentes/AgregarProducto.js","Componentes/EditarProductoModal.js","Componentes/ProductoCard.js","Contenedores/Productos.js","Contenedores/Login.js","Contenedores/RegistroUsuario.js","Routes/index.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","logueado","setLogueado","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","NavBar","classes","useContext","history","useHistory","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","onClick","localStorage","removeItem","push","Inicio","Grid","container","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","AgregarProducto","useState","nombreProducto","setNombreProducto","precioProducto","setPrecioProducto","descripcionProducto","setDescripcionProducto","handleGuardarProducto","a","producto","nombre","precio","descripcion","collection","add","style","margin","item","Input","value","placeholder","onChange","event","target","rand","Math","round","random","getModalStyle","top","left","transform","paper","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","SimpleModal","props","product","id","React","modalStyle","open","setOpen","doc","set","body","type","Modal","onClose","aria-labelledby","aria-describedby","minWidth","bullet","display","pos","marginBottom","ProductCard","data","console","log","eliminarProducto","delete","Card","elevation","CardContent","gutterBottom","CardActions","Productos","products","setproducts","useEffect","obtenerProductos","get","productosDB","docs","map","productos","ProductoCard","Login","email","setEmail","password","setPassword","login","auth","signInWithEmailAndPassword","user","setItem","JSON","stringify","RegistroUsuario","registrarUsuario","createUserWithEmailAndPassword","userForLocalStorage","PrivateRoutes","path","component","getItem","to","Routes","exact","paht","App","setUsuario","usuario","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d453fe66.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst dataInicial = { logueado: null, setLogueado: () => {} }\nconst UserContext = createContext(dataInicial)\n\nexport default UserContext","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useHistory } from 'react-router-dom'\nimport UserContext from '../Context/UserContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const { logueado, setLogueado } = useContext(UserContext)\n  const history = useHistory()\n\n  const registrar = () => {\n    history.push('/registro')\n  }\n\n  const login = () => {\n    history.push('/login')\n  }\n\n  const cerrarSesion = () => {\n    setLogueado(null)\n    localStorage.removeItem('user')\n    history.push('/')\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Administrador de Productos\n          </Typography>\n          { logueado ?\n            <Button color=\"inherit\" onClick={cerrarSesion}>Cerrar Sesion</Button> :\n            <div>\n              <Button color=\"inherit\" onClick={registrar}>Registrar</Button>\n              <Button color=\"inherit\" onClick={login}>Login</Button>\n            </div>\n          }\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar\n","import React from 'react'\nimport { Grid } from '@material-ui/core'\n\nconst Inicio = () => {\n\n    return (\n        <Grid container>\n            <h1>Inicio - Hola Usuario ...</h1>\n        </Grid>\n    )\n}\n\nexport default Inicio","import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAmt_SxI6kIm_EFLRsyYewptElLS6nj8xA\",\n  authDomain: \"product-app-8f442.firebaseapp.com\",\n  databaseURL: \"https://product-app-8f442.firebaseio.com\",\n  projectId: \"product-app-8f442\",\n  storageBucket: \"product-app-8f442.appspot.com\",\n  messagingSenderId: \"892901363219\",\n  appId: \"1:892901363219:web:044ba47aa8a55cb0ffb9e6\"\n};\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore()\n\nexport default db  ","import React, { useState } from 'react'\nimport { Grid, Typography, Input, Button } from '@material-ui/core'\nimport db from '../firebase'\n\nconst AgregarProducto = () => {\n\n    const [nombreProducto, setNombreProducto] = useState(\"\")\n    const [precioProducto, setPrecioProducto] = useState(\"\")\n    const [descripcionProducto, setDescripcionProducto] = useState(\"\")\n\n\n    const changeNombreProducto = (e) => {\n        setNombreProducto(e.target.value)\n    }\n\n    const changePrecioProducto = (e) => {\n        setPrecioProducto(e.target.value)\n    }\n\n    const changeDescripcionProducto = (e) => {\n        setDescripcionProducto(e.target.value)\n    }\n\n    const handleGuardarProducto = async () => {\n        // Configurar nuestro documento\n        const producto = {\n            nombre: nombreProducto,\n            precio: precioProducto,\n            descripcion: descripcionProducto\n        }\n\n        // Llamar al metodo que registra un documento en la BD de FireStore\n        await db.collection(\"productos\").add(producto)\n\n    }\n\n\n    return (\n        <Grid container>\n            <Typography style={{ margin: '20px' }}>\n                <h2>Agregar Productos</h2>\n            </Typography>\n            <Grid container spacing={3}>\n                <Grid item style={{ margin: '20px' }}>\n                    <Input value={nombreProducto} placeholder=\"Nombre\" onChange={(event) => changeNombreProducto(event)}/>\n                </Grid>\n                <Grid item style={{ margin: '20px' }}>\n                    <Input value={precioProducto} placeholder=\"Precio\" onChange={(event) => changePrecioProducto(event)}/>\n                </Grid>\n                <Grid item style={{ margin: '20px' }}>\n                    <Input value={descripcionProducto} placeholder=\"Descripcion\" onChange={(event) => changeDescripcionProducto(event)}/>\n                </Grid>\n                <Grid item style={{ margin: '20px' }}>\n                    <Button onClick={handleGuardarProducto}>Guardar Producto</Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default AgregarProducto","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input } from '@material-ui/core';\nimport db from '../firebase'\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function SimpleModal(props) {\n    const { id, nombre, precio, descripcion } = props.product\n\n\n  const classes = useStyles();\n  \n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [nombreProducto, setNombreProducto] = useState(nombre)\n  const [precioProducto, setPrecioProducto] = useState(precio)\n  const [descripcionProducto, setDescripcionProducto] = useState(descripcion)\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const changeNombreProducto = (e) => {\n      setNombreProducto(e.target.value)\n  }\n\n  const changePrecioProducto = (e) => {\n      setPrecioProducto(e.target.value)\n  }\n\n  const changeDescripcionProducto = (e) => {\n      setDescripcionProducto(e.target.value)\n  }\n\n  const handleGuardarProducto = async () => {\n    //Obtener los campos del producto\n    const product = {\n        nombre: nombreProducto,\n        precio: precioProducto,\n        descripcion: descripcionProducto\n    }\n    //Buscar el producto por id en la BD\n    const productoBD = await db.collection(\"productos\").doc(id)\n\n    //Guardar en la BD\n    productoBD.set(product)\n  }\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Editar Producto</h2>\n      <p id=\"simple-modal-description\">\n        Ingrese los datos del producto\n      </p>\n        <p>Producto: {nombre} {precio} {descripcion}</p>\n        <Input value={nombreProducto} placeholder=\"Nombre\" onChange={(event) => changeNombreProducto(event)}/>\n        <br/>\n        <Input value={precioProducto} placeholder=\"Precio\" onChange={ (event) => changePrecioProducto(event) }/>\n        <br/>\n        <Input value={descripcionProducto} placeholder=\"Descripcion\" onChange={ (event) => changeDescripcionProducto(event)}/>\n        <br/>\n        <Button onClick={handleGuardarProducto}>Guardar Producto</Button>\n\n    </div>\n  );\n\n  return (\n    <div>\n      <Button type=\"button\" onClick={handleOpen}>\n        Editar Producto\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport EditarProductoModal from './EditarProductoModal'\nimport db from '../firebase'\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    width: '20%'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst ProductCard = (props) => {\n  const { id, nombre, precio, descripcion } = props.data\n  console.log(\"Johan: ProductCard -> props.data\", props.data)\n  const classes = useStyles();\n\n  const eliminarProducto = async () => {\n    await db.collection(\"productos\").doc(id).delete()\n  }\n\n  return (\n    <Card className={classes.root} elevation={3}>\n      <CardContent>\n        <Typography color=\"textPrimary\" gutterBottom>\n          Producto: {nombre}\n        </Typography>\n        <Typography color=\"textPrimary\" gutterBottom>\n          Descripcion: {descripcion}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          Precio: {precio}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <EditarProductoModal product={props.data}/>\n        <Button onClick={eliminarProducto}>Eliminar Producto</Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default ProductCard","import React, { useState, useEffect } from 'react'\nimport AgregarProducto from '../Componentes/AgregarProducto'\nimport { Grid } from '@material-ui/core'\nimport ProductoCard from '../Componentes/ProductoCard'\nimport db from '../firebase'\n\nconst Productos = () => {\n\n    const [products, setproducts] = useState([])\n\n    useEffect(() => {\n        obtenerProductos()\n    }, [])\n\n    const obtenerProductos = async () => {\n        const productosDB = await db.collection('productos').get()\n        const productos = await productosDB.docs.map((producto) => {\n        const { id } = producto\n        return { ...producto.data(), id } \n        })\n        setproducts(productos)\n    }\n\n    return ( \n        <Grid container>\n            <AgregarProducto/>\n            <Grid container>\n            { products.map((product) => {\n                return <Grid item style={{ margin: '20px'}}><ProductoCard data={product}/></Grid>\n            })}\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Productos","import React, { useState, useContext } from 'react'\nimport { Grid, Input, Button } from '@material-ui/core'\nimport { auth } from 'firebase'\nimport { useHistory } from 'react-router-dom'\nimport UserContext from '../Context/UserContext'\n\nconst Login = () => {\n\n    const history = useHistory()\n    const { setLogueado } = useContext(UserContext)\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] =useState(\"\")\n\n    const handleEmail = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const handlePassword = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const login = async () => {\n        const { user } = await auth().signInWithEmailAndPassword(email, password)\n        localStorage.setItem(\"user\", JSON.stringify(user))\n        setLogueado(user)\n        history.push('/productos')\n    }\n\n    return(\n        <Grid container spacing={3} style={{ margin: \"20px\"}}>\n\n            <Grid item>\n                <Input value={email} placeholder=\"Email\" onChange={(event) => handleEmail(event)}/>\n            </Grid>\n\n            <Grid item>\n                <Input value={password} placeholder=\"Password\" onChange={(event) => handlePassword(event)}/>\n            </Grid>\n            <Grid item>\n                <Button onClick={login}>Iniciar Sesion</Button>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Login ","import React, { useState } from 'react'\nimport { Grid, Input, Button } from '@material-ui/core'\nimport { auth } from 'firebase'\nimport { useHistory } from 'react-router-dom'\n\n\nconst RegistroUsuario = () => {\n\n    const history = useHistory()\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const handleEmail = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const handlePassword = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const registrarUsuario = async () => {\n        const registro = await auth().createUserWithEmailAndPassword(email, password)\n        if(registro){\n            const { user } = await auth().signInWithEmailAndPassword(email, password)\n            if(user){\n                const userForLocalStorage = JSON.stringify(user)\n                localStorage.setItem(\"user\", userForLocalStorage)\n                history.push('/productos')\n            }\n        }\n    }\n\n    return(\n        <Grid container spacing={3} style={{ margin: \"20px\"}}>\n\n            <Grid item>\n                <Input value={email} onChange={(event) => handleEmail(event)} placeholder=\"Email\"/>\n            </Grid>\n\n            <Grid item>\n                <Input value={password} onChange={(event) => handlePassword(event)} placeholder=\"Password\"/>\n            </Grid>\n            <Grid item>\n                <Button onClick={registrarUsuario}>Registrar Usuario</Button>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default RegistroUsuario ","import React from 'react'\nimport { Route, Switch, Redirect} from 'react-router-dom'\nimport Inicio from '../Contenedores/Inicio'\nimport Productos from '../Contenedores/Productos'\nimport Login from '../Contenedores/Login'\nimport RegistroUsuario from '../Contenedores/RegistroUsuario'\n\nconst PrivateRoutes = ({ path, component }) => {\n\n    const usuarioLogueado = localStorage.getItem(\"user\")\n\n    if(usuarioLogueado){\n        return <Route path={path} component={component}/>\n    }\n\n    return <Redirect to=\"/login\"/>\n}\n\nconst Routes = () => {\n    \n    return(\n        <Switch>\n            <Route exact path=\"/\" component={Inicio}/>\n            <PrivateRoutes path=\"/productos\" component={Productos}/>\n            <Route path=\"/login\" component={Login}/>\n            <Route paht=\"/registro\" component={RegistroUsuario}/>\n        </Switch>\n    )\n}\n\nexport default Routes","import React, { useState } from 'react';\nimport NavBar from './Componentes/NavBar'\nimport Routes from './Routes';\nimport UserContext from './Context/UserContext'\n\nconst App = () => {\n\n  const setLogueado = (logueado) => {\n    setUsuario({ ...usuario, logueado })\n  }\n\n  const [usuario, setUsuario] = useState({ logueado: null, setLogueado})\n\n  return (\n    <UserContext.Provider value={{ logueado: usuario.logueado, setLogueado: usuario.setLogueado }}>\n      <NavBar/>\n      <Routes/>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}